plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.architectury.minecraft}-${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "forge"
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    repositories {
        maven {
            credentials {
                username = System.getenv('PUBLISH_USER')
                password = System.getenv('PUBLISH_PASSWORD')
            }

            url 'https://nexus.themcbrothers.net/repository/maven-releases/'
        }
    }
}

unifiedPublishing {
    project {
        displayName = "[Forge $minecraft_version] v$mod_version"
        releaseType = project.releaseType
        gameVersions = [minecraft_version]
        gameLoaders = [project.name]

        mainPublication remapJar

        var curseforgeToken = System.getenv("CURSEFORGE_TOKEN")
        var modrinthToken = System.getenv("MODRINTH_TOKEN")
        var changelogFile = rootProject.file("changelog.md").text

        relations {
            depends {
                curseforge = "architectury-api"
                modrinth = "architectury-api"
            }
        }

        if (curseforgeToken != null) {
            curseforge {
                token = curseforgeToken
                id = project.curse_project
                gameVersions.addAll "Java 17"
                changelog = changelogFile
            }
        }

        if (modrinthToken != null) {
            modrinth {
                token = modrinthToken
                id = project.modrinth_project
                version = "$project.version+$project.name"
                changelog = changelogFile.substring(changelogFile.indexOf('\n'), changelogFile.indexOf('\n\n'))
            }
        }
    }
}
